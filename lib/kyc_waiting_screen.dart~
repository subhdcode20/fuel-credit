import 'package:flutter/material.dart';
import 'package:craditapp/constants.dart';
import 'package:lottie/lottie.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'dart:async';
import 'DriverHomeScreen.dart';

class KycWaitingScreen extends StatefulWidget {
  final Map<String, dynamic> userData;

  const KycWaitingScreen({Key? key, required this.userData}) : super(key: key);

  @override
  _KycWaitingScreenState createState() => _KycWaitingScreenState();
}

class _KycWaitingScreenState extends State<KycWaitingScreen> with SingleTickerProviderStateMixin {
  late AnimationController _animationController;
  Timer? _refreshTimer;
  bool _isLoading = false;

  @override
  void initState() {
    super.initState();
    _animationController = AnimationController(
      vsync: this,
      duration: Duration(seconds: 2),
    )..repeat(reverse: true);

    // Set up a timer to check KYC status every 30 seconds
    _refreshTimer = Timer.periodic(Duration(seconds: 30), (timer) {
      _checkKycStatus();
    });
  }

  @override
  void dispose() {
    _animationController.dispose();
    _refreshTimer?.cancel();
    super.dispose();
  }

  Future<void> _checkKycStatus() async {
    if (_isLoading) return;

    setState(() {
      _isLoading = true;
    });

    try {
      final user = FirebaseAuth.instance.currentUser;
      if (user != null) {
        final phoneNo = user.phoneNumber;
        final docSnapshot = await FirebaseFirestore.instance.collection('userDetails').doc(phoneNo).get();

        if (docSnapshot.exists) {
          final userData = docSnapshot.data();
          final isKycVerified = userData?['isKycVerified'] ?? false;

          if (isKycVerified) {
            // KYC is now verified, navigate to Driver Home Screen
            Navigator.pushReplacement(
              context,
              MaterialPageRoute(builder: (context) => DriverHomeScreen(userData: userData!)),
            );
          }
        }
      }
    } catch (e) {
      debugPrint('Error checking KYC status: $e');
    } finally {
      if (mounted) {
        setState(() {
          _isLoading = false;
        });
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    final screenSize = MediaQuery.of(context).size;
    
    return Scaffold(
      backgroundColor: AppColors.backgroundColor,
      body: Stack(
        children: [
          // Background elements
          Positioned.fill(
            child: CustomPaint(
              painter: CustomPainter(), // Temporary replacement - implement proper wave animation painter
            ),
          ),
          Positioned(
            top: -100,
            right: -100,
            child: Container(
              width: 200,
              height: 200,
              decoration: BoxDecoration(
                shape: BoxShape.circle,
                gradient: LinearGradient(
                  colors: [
                    AppColors.primaryColor.withOpacity(0.3),
                    AppColors.primaryColor.withOpacity(0.1),
                  ],
                  begin: Alignment.topLeft,
                  end: Alignment.bottomRight,
                ),
              ),
            ),
          ),
          
          // Main content
          SafeArea(
            child: Center(
              child: Padding(
                padding: const EdgeInsets.all(24.0),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    // Animation for waiting
                    Container(
                      width: screenSize.width * 0.6,
                      height: screenSize.width * 0.6,
                      child: Lottie.asset(
                        'assets/animations/verification_waiting.json',
                        fit: BoxFit.contain,
                        // If you don't have this animation, use a simple animated container instead
                        errorBuilder: (context, error, stackTrace) {
                          return AnimatedBuilder(
                            animation: _animationController,
                            builder: (context, child) {
                              return Container(
                                width: 150,
                                height: 150,
                                decoration: BoxDecoration(
                                  shape: BoxShape.circle,
                                  gradient: LinearGradient(
                                    colors: [
                                      AppColors.primaryColor,
                                      AppColors.primaryColor.withOpacity(0.5),
                                    ],
                                    begin: Alignment.topLeft,
                                    end: Alignment.bottomRight,
                                  ),
                                  boxShadow: [
                                    BoxShadow(
                                      color: AppColors.primaryColor.withOpacity(0.3 + 0.2 * _animationController.value),
                                      blurRadius: 20,
                                      spreadRadius: 5 + 5 * _animationController.value,
                                    ),
                                  ],
                                ),
                                child: Icon(
                                  Icons.hourglass_top,
                                  color: Colors.white,
                                  size: 60,
                                ),
                              );
                            },
                          );
                        },
                      ),
                    ),
                    SizedBox(height: 40),
                    Text(
                      'KYC Verification Pending',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 24,
                        fontWeight: FontWeight.bold,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    SizedBox(height: 16),
                    Text(
                      'Your KYC verification is in progress. We\'ll notify you once it\'s approved.',
                      style: TextStyle(
                        color: Colors.grey[400],
                        fontSize: 16,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    SizedBox(height: 40),
                    // Refresh button
                    ElevatedButton.icon(
                      onPressed: _isLoading ? null : _checkKycStatus,
                      icon: _isLoading 
                          ? SizedBox(
                              width: 20,
                              height: 20,
                              child: CircularProgressIndicator(
                                valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                                strokeWidth: 2,
                              ),
                            )
                          : Icon(Icons.refresh),
                      label: Text(_isLoading ? 'Checking...' : 'Check Status'),
                      style: ElevatedButton.styleFrom(
                        backgroundColor: AppColors.primaryColor,
                        foregroundColor: Colors.white,
                        padding: EdgeInsets.symmetric(horizontal: 24, vertical: 12),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(12),
                        ),
                      ),
                    ),
                    SizedBox(height: 20),
                    TextButton(
                      onPressed: () {
                        FirebaseAuth.instance.signOut();
                        Navigator.pushNamedAndRemoveUntil(context, '/login', (route) => false);
                      },
                      child: Text(
                        'Sign Out',
                        style: TextStyle(
                          color: Colors.grey[400],
                          fontSize: 14,
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}

// If you don't have the WavePainter class in this file, add it here
// or import it from where it's defined